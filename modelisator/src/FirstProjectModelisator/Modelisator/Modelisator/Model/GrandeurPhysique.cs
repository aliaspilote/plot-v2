///////////////////////////////////////////////////////////
//  GrandeurPhysique.cs
//  Implementation of the Class GrandeurPhysique
//  Generated by Enterprise Architect
//  Created on:      17-juin-2015 09:38:57
///////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Text;
using System.Threading.Tasks;
using Modelisator.Model;

namespace Modelisator.Model {
    public class GrandeurPhysique : INotifyPropertyChanged
    {

        private int     m_iM;
        private bool    m_Calcule;
		private string  m_Description;
		private bool    m_EstPremier;
		private string  m_Nom;
		private bool    m_Selectionne;
		private string  m_Unite;
		private double  m_Valeur;
        private bool    m_entree;
        private string imageFullPath;

        protected void OnPropertyChanged(PropertyChangedEventArgs e)
        {
            PropertyChangedEventHandler handler = PropertyChanged;
            if (handler != null)
                handler(this, e);
        }

        protected void OnPropertyChanged(string propertyName)
        {
            OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
        }

        protected void OnValeurChanger(EventArgs e)
        {
            EventHandler handler = ValeurChanger;
            if (handler != null)
                handler(this, e);
        }

        public event EventHandler ValeurChanger;

        public event PropertyChangedEventHandler PropertyChanged;

        public  List<Equation> Equations;

        public GrandeurPhysique() { }

	    public GrandeurPhysique(string nom)
	    {
	        Nom = nom;
            Unite = "[SI]";
            isCalculate = false;
            isGiven = false;
	    }
        public GrandeurPhysique(string nom, int im)
        {
            Nom = nom;
            iM = im;
            Unite = "[SI]";
            isCalculate = false;
            isGiven = false;
        }

	    public bool isCalculate { get; set; }
        public bool isGiven { get; set; }

		public bool Calcule{
			get{
                return m_Calcule;
			}
			set{
                m_Calcule = value;
			}
		}

		public string Description{
			get{
                return m_Description;
			}
			set{
                m_Description = value;
			}
		}

		public bool     EstPremier{
			get{
                return m_EstPremier;
			}
			set{
                m_EstPremier = value;
			}
		}

		public string   Nom{
			get{
                return m_Nom;
			}
			set{
                m_Nom = value;
			}
		}

		public bool     Selectionne{
			get{
				return m_Selectionne;
			}
			set{
				m_Selectionne = value;
			}
		}

		public string   Unite{
			get{
				return m_Unite;
			}
			set{
				m_Unite = value;
			}
		}

		public double   Valeur{
			get{
				return m_Valeur;
			}
			set
			{
			    isGiven = true;
			    isCalculate = false;
                if (value != m_Valeur)
                {
                    m_Valeur = value;
                    OnPropertyChanged("Valeur");
                    OnValeurChanger(EventArgs.Empty);
                }
			}
		}

        public bool Entree
        {
            get
            {
                return m_entree;
            }
            set
            {
                m_entree = value;
            }
        }

        public int iM
        {
            get { return m_iM; }
            set { m_iM = value; }
        }

	}//end GrandeurPhysique

}//end namespace Modelisator.Model